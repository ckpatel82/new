{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location to create the VM in"
      }
    },
    "userImageStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the your storage account"
      }
    },
    "userImageStorageContainerName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the container in your storage account"
      }
    },
    "userImageVhdName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the your customized VHD"
      }
    },
    "dataDiskUri": {
      "type": "string",
      "metadata": {
        "description": "URL to data disk resource"
      }
    },
    "osType": {
      "type": "string",
      "allowedValues": [
        "Windows",
        "Linux"
      ],
      "metadata": {
        "description": "Type of OS on the existing vhd"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2",
      "metadata": {
        "description": "Size of the VM"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name of the VM"
	  }
      },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "UserName for the Virtual Machine"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine"
      }
    },
    "baseUrl": {
      "type": "string",
      "metadata": {
         "artifactsBaseUrl": "",
         "description": "URL to acquire other templates"
      },
         "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/cisco-csr-1000v"
    },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "CSR_Network",
            "metadata": { "description": "VNet name" }
        },
        "virtualNetworkExistingRGName": {
            "type": "string",
            "defaultValue": "ckpatelcus",
            "metadata": { "description": "name of the resourceGroup" }
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": { "description": "Virtual Network Address prefix" }
        },
        "vnetNewOrExisting" : {
            "type" : "string",
            "allowedValues": ["new", "existing"],
            "defaultValue" : "existing",
            "metadata": { "description": "Identifies whether to use new or existing Virtual Network" }
        },
        "Subnet1Prefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": { "description": "Subnet 1 Prefix" }
        },
        "Subnet1Name": {
            "type": "string",
            "defaultValue": "Frontend",
            "metadata": { "description": "Subnet 1 Name" }
        },
        "Subnet2Prefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": { "description": "Subnet 2 Prefix" }
        },
        "Subnet2Name": {
            "type": "string",
            "defaultValue": "Backend",
            "metadata": { "description": "Subnet 2 Name" }
        },
        "subnet2StartAddress" : {
            "type" : "string",
	    "defaultValue": "10.0.1.5",
            "metadata" : { "description" : "Subnet 1 Starting IP Address" }
        }
	},
  "variables": {
    "api-version": "2015-06-15",
    "apiVer": "2015-06-15",
    "imageOffer": "vwaas_beta",
    "storageAccountName": "[concat('http://',parameters('userImageStorageAccountName'),'.blob.core.windows.net')]",
    "publicIPAddressName": "specializedVMPublicIP",
    "publicIPAddressType": "Dynamic",
    "virtualNetworkName": "specializedVMVNET",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet1Name'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet2Name'))]",
    "virtualNetworkSetupURL": "[concat(parameters('baseUrl'),'/vnet-',parameters('vnetNewOrExisting'),'.json')]",
    "userImageName": "[concat('http://',parameters('userImageStorageAccountName'),'.blob.core.windows.net/',parameters('userImageStorageContainerName'),'/',parameters('userImageVhdName'))]",
    "osDiskVhdName": "[concat('http://',parameters('userImageStorageAccountName'),'.blob.core.windows.net/vhds/',parameters('vmName'),'osDisk.vhd')]"
  },
  "resources": [
        {
            "apiVersion": "[variables('apiVer')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmName'),'-Nic0')]",
            "location": "[parameters('location')]",
            "dependsOn": [
"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
                            "subnet": { "[variables('subnet1Ref')]" }
                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "apiVersion": "[variables('apiVer')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmName'),'-Nic1')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress" : "[parameters('subnet2StartAddress')]",
                            "subnet": { "id": "[variables('subnet2Ref')]" }
                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
	  "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic0')]",
          "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic1')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
        "dataDisks": [
		{
            "name": "[concat(parameters('vmName'),'-dataDisk')]",
            "lun": '0',
            "createOption": "FromImage",            
            "vhd": {
              "uri": "[parameters('dataDiskUri')]"
            },			
		}
	],
          "osDisk": {
            "name": "[concat(parameters('vmName'),'-osDisk')]",
            "osType": "[parameters('osType')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "image": {
              "uri": "[variables('userImageName')]"
            },
            "vhd": {
              "uri": "[variables('osDiskVhdName')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
             {
               "properties": { "primary": true },
               "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-Nic0'))]"
             },
             {
               "properties": { "primary": false },
               "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-Nic1'))]"
             }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
             "enabled": "true",
	     "storageUri": "[concat('http://',parameters('userImageStorageAccountName'),'.blob.core.windows.net')]"
          }
        }  
      }
    }
  ]
}
